openapi: 3.0.3
paths:

  /liveness:
    post:
      tags:
        - liveness
      summary: "Detect face from the video and check its liveness status."
      operationId: check_video_liveness
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              $ref: "./common.yml#/components/schemas/Bytes"
      responses:
        200:
          description: "Successful operation; return detected face with its liveness status."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LivenessResultItem"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        403:
          $ref: "./common.yml#/components/responses/BadLicense"

  /liveness/depth:
    post:
      tags:
        - liveness
      summary: "Detect faces from the images and check their liveness status. Liveness status depends on color depth."
      operationId: check_depth_liveness
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepthLiveness"
      responses:
        200:
          description: "Successful operation; return detected faces with their liveness status."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LivenessResult"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        403:
          $ref: "./common.yml#/components/responses/BadLicense"

  /liveness/image:
    post:
      tags:
        - liveness
      sumary: "Detect faces from the images and check their liveness status."
      operationId: check_image_liveness
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageLiveness"
      responses:
        200:
          description: "Successful operation; return detected faces with their liveness status."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LivenessResult"
        400:
          $ref: "./common.yml#/components/responses/BadRequest"
        403:
          $ref: "./common.yml#/components/responses/BadLicense"

components:
  schemas:

    DepthLiveness:
      type: object
      required:
        - images
      properties:
        images:
          type: array
          items:
            $ref: "#/components/schemas/DepthLivenessItem"

    DepthLivenessItem:
      type: object
      required:
        - dataScene
        - dataDepth
        - depthScale
      properties:
        dataScene:
          $ref: "./common.yml#/components/schemas/ImageData"
        dataDepth:
          $ref: "./common.yml#/components/schemas/ImageData"
        depthScale:
          description: "Normalized factor for color depth."
          type: number
          format: float

    ImageLiveness:
      type: object
      required:
        - images
      properties:
        images:
          type: array
          items:
            $ref: "#/components/schemas/ImageLivenessItem"

    ImageLivenessItem:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "./common.yml#/components/schemas/ImageData"

    LivenessResult:
      type: array
      items:
        $ref: "#/components/schemas/LivenessResultItem"

    LivenessResultItem:
      type: object
      required:
        - face
        - livenessStatus
      properties:
        face:
          $ref: "./common.yml#/components/schemas/ImageData"
        livenessStatus:
          $ref: "#/components/schemas/LivenessStatus"
        code:
          $ref: "./common.yml#/components/schemas/FaceRecognitionResultCode"
        index:
          type: integer

    LivenessStatus:
      type: integer
      enum:
        - 0
        - 1
      x-enum-varnames:
        - POSITIVE
        - UNDETERMINED
